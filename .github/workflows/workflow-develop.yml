name: CI/CD for Notebook backend service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_URL: us-central1-docker.pkg.dev/notebook-service-442013/notebook-backend/nb-gin
  IMAGE_TAG: latest

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Install dependencies
      run: go mod tidy

    - name: Build application
      run: go build -o app main.go

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Run tests
      run: go test ./...

  image-upload:
    runs-on: ubuntu-latest
    needs: test
    environment: develop
    env:
      GCE_INSTANCE: "nb-service-staging"
      GCE_ZONE: "us-central1-c"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCE_SA_KEY }}
    - run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    - name: Build Docker image
      uses: docker/setup-buildx-action@v2
    - run: |
        docker build -t $IMAGE_URL:$IMAGE_TAG .

    - name: Push Docker image to GAR
      run: |
        docker push $IMAGE_URL:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: image-upload
    environment: develop
    env:
      GCE_INSTANCE: ${{ vars.GCE_INSTANCE }}
      GCE_ZONE: ${{ vars.GCE_ZONE }}
    steps:
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCE_SA_KEY }}
    - run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    - name: Deploy Docker container to GCE
      run: |
        gcloud compute ssh $GCE_INSTANCE --zone=$GCE_ZONE --command="
          sudo docker pull $IMAGE_URL:$IMAGE_TAG &&
          sudo docker stop nb-backend || true &&
          sudo docker rm nb-backend || true &&
          sudo docker run -d --name nb-backend -p 80:8080 $IMAGE_URL:$IMAGE_TAG
        "